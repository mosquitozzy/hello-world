数组的四个基本方法如下：（数组元素的添加和删除）
方法	
push()	向数组的最后面插入一个或多个元素，返回结果为该数组新的长度	会改变原数组
pop()	删除数组中的最后一个元素，返回结果为被删除的元素	会改变原数组
unshift()	在数组最前面插入一个或多个元素，返回结果为该数组新的长度	会改变原数组
shift()	删除数组中的第一个元素，返回结果为被删除的元素	会改变原数组


数组的常见方法如下：
方法	描述	备注
slice()	从数组中提取指定的一个或多个元素，返回结果为新的数组	不会改变原数组
splice()	从数组中删除指定的一个或多个元素，返回结果为新的数组	会改变原数组
concat()	连接两个或多个数组，返回结果为新的数组	不会改变原数组
join()	将数组转换为字符串，返回结果为转换后的字符串	不会改变原数组
reverse()	反转数组，返回结果为反转后的数组	会改变原数组
sort()	对数组的元素,默认按照Unicode编码，从小到大进行排序	会改变原数组

遍历数组的方法如下：
方法	描述	备注
for循环	这个大家都懂	
forEach()	和 for循环类似，但需要兼容IE8以上	forEach() 没有返回值。也就是说，它的返回值是 undefined
map()	对原数组中的每一项进行加工，将组成新的数组	不会改变原数组
filter()	对数组中每一项运行回调函数，该函数返回结果是true的项，将组成新的数组，返回结果为新的数组。可以起到过滤的作用	不会改变原数组
every()	如果有一项返回false，则停止遍历，此方法返回 false	一假即假。要求每一项都返回true，最终的结果才返回true
some()	只要有一项返回true，则停止遍历，此方法返回true	一真即真。要求每一项都返回false，最终的结果才返回false
reduce	为数组中的每一个元素，依次执行回调函数	

数组的其他方法如下：
方法	描述	备注
indexOf(value)	从前往后索引，获取 value 在数组中的第一个下标	
lastIndexOf(value)	从后往前索引，获取 value 在数组中的最后一个下标	
find(function())	找出第一个满足「指定条件返回true」的元素。	
findIndex(function())	找出第一个满足「指定条件返回true」的元素的index	
Array.from(arrayLike)	将伪数组转化为真数组	
Array.of(value1, value2, value3)	将一系列值转换成数组。
